openapi: 3.0.1
info:
  title: Health, User, and Account API
  version: 1.0.0
paths:
  /health:
    get:
      summary: Get application health status
      operationId: getHealth
      responses:
        "200":
          description: Application is healthy
          content: {}
        "500":
          description: Application is unhealthy
          content: {}
  /users:
    get:
      summary: Get all users
      operationId: getUsers
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid input
          content: {}
  /accounts:
    get:
      summary: Get all accounts
      operationId: getAccounts
      responses:
        "200":
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
    post:
      summary: Create a new account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "201":
          description: Account created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: Invalid input
          content: {}
  /accounts/{accountId}/users/{userId}:
    post:
      summary: Link an account to a user
      operationId: linkAccountToUser
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Account linked to user
        "404":
          description: Account or user not found
    delete:
      summary: Unlink an account from a user
      operationId: unlinkAccountFromUser
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Account unlinked from user
        "404":
          description: Account or user not found

  /users/{userId}/accounts/{accountId}:
    post:
      summary: Link a user to an account
      operationId: linkUserToAccount
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User linked to account
        "404":
          description: User or account not found
    delete:
      summary: Unlink a user from an account
      operationId: unlinkUserFromAccount
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User unlinked from account
        "404":
          description: User or account not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        name:
          type: string
        surname:
          type: string
        accountIds:
          type: array
          items:
            type: integer
    Account:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        industry:
          type: string
        userIds:
          type: array
          items:
            type: integer
